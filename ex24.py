# [코드 정의]
# 이 코드는 지금까지 배운 것(출력, 탈출문자열, 함수, 문자열 포맷 연습 등을)복습하는 코드이다.

#[1]출력 및 탈출(이스케이프) 연습
print("모든 것을 연습해봅시다.")
# \\=역슬래시, \n=줄바꿈, \t=수평탭, \'=잗은 따옴표
print('\\를 이용해 \n 새줄이나 \t 탭을 하는 탈출 문자열에 대해 \'알아야만\' 합니다.')

시 = """
\tThe lovely world
with logic so firmly planted
cannot discern \n the needs of love
nor comprehen passion from intuition
and requires an explanation
\n\t\twhere there is doneself.
"""

print("------------------------------")
print(시)
print("------------------------------")

#[2]연산 연습
다섯 = 10 - 2 + 3 - 6
print(f"이 값은 다섯입니다: {다섯}")

#[3] 함수 연습
# 함수정의 : 함수의 이름은 "비밀_공식"이고 1개의 인자값을 받아 처리하여 값을 return한다.
def 비밀_공식(시작):
    젤리알 = 시작 * 500
    그릇 = 젤리알 / 1000
    상자 = 그릇 / 100
    return 젤리알, 그릇, 상자
#비밀_공식 함수에 시작점 10000을 채우고 젤리, 그릇, 상자 변수에 넣는다.
시작점 = 10000
젤리, 그릇, 상자 = 비밀_공식(시작점)

#[3-1] 문자열을 포맷하는 다른 방법.
print("시작점: {}".format(시작점))
#f"" 문자열을 쓰는 것과 같다.
print(f"젤리 {젤리}알, {그릇}그릇, {상자}상자가 있습니다.")

시작점 = 시작점 / 10
#[3-2] 문자열을 포맷하는 다른 방법
print("이렇게 할 수도 있습니다")
공식 = 비밀_공식(시작점)
# 리스트를 포맷 문자열에 적용("*공식")하는 쉬운 방법이지요.
print("젤리 {}알, {}그릇, {}상자가 있습니다.".format(*공식))
