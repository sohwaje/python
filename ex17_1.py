#사용자의 입력값을 받아서 원본_파일에 쓰고 이를 다시 복사_파일에 복사하는 스크립트
from sys import argv
from os.path import exists

스크립트, 원본_파일, 복사_파일 = argv


print(f"사용자의 입력값을 받아서 {원본_파일}에 쓰고, 이것을 {복사_파일}로 복사합니다.")
print("문자열을 입력하세요")

#[1]문자열을 입력받음.
가_행 = input("가_행: ")
나_행 = input("나_행: ")
다_행 = input("다_행: ")

#[2]입력_자료 객체를 생성하고 "원본_파일"을 쓰기 모드로 open한다.
#[2-1]현재 "원본_파일" 내용이 없는 빈 파일이다.
#[2-2]입력_자료 객체에 "가_행" 변수에 저장된 문자열을 write한다.
입력_자료 = open(원본_파일, 'w')
입력_자료.write(가_행)
입력_자료.write("\n")
입력_자료.write(나_행)
입력_자료.write("\n")
입력_자료.write(다_행)
입력_자료.close()
#반드시 close한다. 그렇지 않으면 저장되지 않은 것으로 간주되므로 다음 코드에서 len 값이 0이 된다.

#[3] 입력_조회 객체를 생성하고 문자열이 저장된 원본_파일을 읽기 모드로 open한다.
#[3-1]"원본_파일"의 문자열 값을 넘겨 받은 입력_조회의 문자열 값을 출력한다.
입력_조회 = open(원본_파일, 'r').read()
print(f"입력 파일은 {len(입력_조회)} 바이트입니다.")

#exists 함수에 의해서 복사_파일이 존재하면 True, 없으면 False
#여기서는 미리 만들어둔 new_copy_file.txt가 있으므로 True를 출력한다.
print(f"출력 파일이 존재하나요? {exists(복사_파일)}")

#[4]출력_파일 객체를 생성하고 "복사_파일"을 쓰기 모드로 열어서 "입력_조회"의 문자열을 쓴다(복사).
#[4-1] 출력_파일 객체에 복사_파일의 읽기 모드로 실행한다.
#[4-2] 출력_파일에서 읽은 것을 화면에 출력한다.
출력_파일 = open(복사_파일, 'w').write(입력_조회)
출력_파일 = open(복사_파일, 'r')
print(출력_파일.read())
